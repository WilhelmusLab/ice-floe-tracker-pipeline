# from https://docs.github.com/en/actions/guides/publishing-docker-images

name: Build and Push Container - SOIT
on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:
  release:
    types: [published]

env:
  DOCKER_HUB_IMAGE_NAME: brownccv/icefloetracker-soit
  GCR_IMAGE_NAME: ghcr.io/${{ github.repository }}/soit

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    outputs:
      image_digest: ${{ steps.push.outputs.digest }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ccvbot
          password: ${{ secrets.CCVBOT_DOCKER_PASSWORD }}
      
      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_HUB_IMAGE_NAME }}
            ${{ env.GCR_IMAGE_NAME }}
            
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: ./satellite-overpass-identification-tool
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.GCR_IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  test:
    runs-on: ubuntu-latest
    needs: build_and_push
    permissions:
      packages: read
      contents: read
      attestations: read
      id-token: write
    steps:
      
      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Test SOIT
        run: |
          GCR_IMAGE_NAME_LOWERCASE=`echo ${{ env.GCR_IMAGE_NAME }} | tr '[:upper:]' '[:lower:]'`
          docker run -v `pwd`:/app -w /app --rm \
          ${GCR_IMAGE_NAME_LOWERCASE}@${{ needs.build_and_push.outputs.image_digest }} \
          -u ${{ secrets.SPACEUSER }} -p ${{ secrets.SPACEPSWD }} \
          --startdate 2013-03-31 --enddate 2013-05-01 \
          --lat 76.0015 --lon -18.4315 \
          --csvoutpath .
      